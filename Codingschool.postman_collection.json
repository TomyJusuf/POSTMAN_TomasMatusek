{
	"info": {
		"_postman_id": "f54a1e04-8fb3-4980-bb71-6eee7365063e",
		"name": "Codingschool",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "16937374"
	},
	"item": [
		{
			"name": "API Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    console.log(pm.response.status)",
							"});",
							"",
							"",
							"pm.test('Status should be OK',()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{codingSchool-networking}}internal/status"
			},
			"response": []
		},
		{
			"name": "API Change log",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    console.log(pm.response.status)",
							"});",
							"",
							"",
							"pm.test('Status should be OK',()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{codingSchool-networking}}internal/changelog"
			},
			"response": []
		},
		{
			"name": "API Element",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    console.log(pm.response.status)",
							"});",
							"",
							"",
							"pm.test('Status should be OK',()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{codingSchool-networking}}element"
			},
			"response": []
		},
		{
			"name": "API Element Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"    console.log(pm.response.status)",
							"});",
							"",
							"const response=pm.response.json()",
							"pm.test('Status should be Created',()=>{",
							"    pm.expect(pm.response.status).to.eql(\"Created\")",
							"})",
							"",
							"pm.globals.set('userID',response.id)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"{{$randomFullName}}\",\n  \"description\": \"{{$randomJobDescriptor}}\",\n  \"luckyNumber\": 1\n  \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{codingSchool-networking}}element"
			},
			"response": []
		},
		{
			"name": "API Element by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    console.log(pm.response.status)",
							"});",
							"",
							"",
							"pm.test('Status should be OK',()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{codingSchool-networking}}element/:id",
					"host": [
						"{{codingSchool-networking}}element"
					],
					"path": [
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{userID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "API Element Patch by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    console.log(pm.response.status)",
							"});",
							"",
							"",
							"pm.test('Status should be OK',()=>{",
							"    pm.expect(pm.response.status).to.eql(\"OK\")",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\n       \"description\": \"Description changed on {{$randomJobDescriptor}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{codingSchool-networking}}element/:id",
					"host": [
						"{{codingSchool-networking}}element"
					],
					"path": [
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{userID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "API Element DELETE by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"    console.log(pm.response.status)",
							"});",
							"",
							"",
							"pm.test('Status should be No Content',()=>{",
							"    pm.expect(pm.response.status).to.eql(\"No Content\")",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"6568aa58a9c8fa001e7e3700\",\n    \"user\": {\n        \"username\": \"tomas\",\n        \"role\": \"user\"\n    },\n    \"name\": \"Tomas Matusek\",\n    \"description\": \"admin\",\n    \"luckyNumber\": 1,\n    \"createdAt\": \"2023-11-30T15:29:28.369Z\",\n    \"updatedAt\": \"2023-11-30T15:29:28.369Z\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{codingSchool-networking}}element/:id",
					"host": [
						"{{codingSchool-networking}}element"
					],
					"path": [
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{userID}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": {
			"password": "1234",
			"username": "TomasMatusek"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "codingSchool-networking",
			"value": "https://coding-school-networking.dev.webundsoehne.com/",
			"type": "string"
		}
	]
}